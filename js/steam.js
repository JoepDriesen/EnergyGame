let SOLID = 'Solid',
    LIQUID = 'Liquid',
    STEAM = 'Steam',
    GAS = 'Gaseous';
    
let steamTable = {
    table: [],
    
    getState: function(p, T) {
        if (T < 273.01)
            return SOLID;
        
        if (T > 373.95 + 273)
            return GAS;
            
        let props = steamTable.getPropsT(T);
        if (Math.abs(p - props.p) < 1)
            return STEAM;
        if (p > props.p)
            return LIQUID;
        return GAS;
    },
    getPropsT: function(T) {
        let last_e = null;
        
        for (var entry_i in steamTable.table) {
            let e = steamTable.table[entry_i];
            
            if (e.t == T)
                return e;
            
            if (e.t > T) {
                if (last_e === null)
                    return null;
                    
                let r = (T - last_e.t) / (e.T - last_e.t);
                return {
                    t: T,
                    p: last_e.p + r * (e.p - last_e.p),
                    vf: last_e.vf + r * (e.vf - last_e.vf),
                    vg: last_e.vg + r * (e.vg - last_e.vg),
                    hf: last_e.hf + r * (e.hf - last_e.hf),
                    hg: last_e.hg + r * (e.hg - last_e.hg),
                    sf: last_e.sf + r * (e.sf - last_e.sf),
                    sg: last_e.sg + r * (e.sg - last_e.sg),
                };
            }
            
            last_e = e;
        }
        
        return null;
    },
    getPropsP: function(p) {
        let last_e = null;
        
        for (var entry_i in steamTable.table) {
            let e = steamTable.table[entry_i];
            
            if (e.p == p)
                return e.slice();
            
            if (e.p > p) {
                if (last_e === null)
                    return null;
                    
                let r = (p - last_e.p) / (e.p - last_e.p);
                return {
                    t: last_e.t + r * (e.t - last_e.t),
                    p: p,
                    vf: last_e.vf + r * (e.vf - last_e.vf),
                    vg: last_e.vg + r * (e.vg - last_e.vg),
                    hf: last_e.hf + r * (e.hf - last_e.hf),
                    hg: last_e.hg + r * (e.hg - last_e.hg),
                    sf: last_e.sf + r * (e.sf - last_e.sf),
                    sg: last_e.sg + r * (e.sg - last_e.sg),
                };
            }
            
            last_e = e;
        }
        
        return null;
    },
};

function FixSaturatedSteamTables() {
    let _steam_sat = [
        [0.01,0.00061,0.00100,205.99,0,2374.9,0.001,2500.9,2500.9,0,9.1555,9.1555],
[5,0.00087,0.00100,147.01,21.02,2381.8,21.0,2489.1,2510.1,0.0763,8.9485,9.0248],
[10,0.00123,0.00100,106.30,42.02,2388.6,42.0,2477.2,2519.2,0.1511,8.7487,8.8998],
[15,0.00171,0.00100,77.875,62.98,2395.5,63.0,2465.3,2528.3,0.2245,8.5558,8.7803],
[20,0.00234,0.00100,57.757,83.91,2402.3,83.9,2453.5,2537.4,0.2965,8.3695,8.6660],
[25,0.00317,0.00100,43.337,104.83,2409.1,104.8,2441.7,2546.5,0.3672,8.1894,8.5566],
[30,0.00425,0.00100,32.878,125.73,2415.9,125.7,2429.8,2555.5,0.4368,8.0152,8.4520],
[35,0.00563,0.00101,25.205,146.63,2422.7,146.6,2417.9,2564.5,0.5051,7.8466,8.3517],
[40,0.00739,0.00101,19.515,167.53,2429.4,167.5,2406.0,2573.5,0.5724,7.6831,8.2555],
[45,0.00960,0.00101,15.252,188.43,2436.1,188.4,2394.0,2582.4,0.6386,7.5247,8.1633],
[50,0.01235,0.00101,12.027,209.33,2442.7,209.3,2382.0,2591.3,0.7038,7.3710,8.0748],
[55,0.01576,0.00102,9.5643,230.24,2449.3,230.3,2369.8,2600.1,0.7680,7.2218,7.9898],
[60,0.01995,0.00102,7.6672,251.16,2455.9,251.2,2357.6,2608.8,0.8313,7.0768,7.9081],
[65,0.02504,0.00102,6.1935,272.09,2462.4,272.1,2345.4,2617.5,0.8937,6.9359,7.8296],
[70,0.03120,0.00102,5.0395,293.03,2468.9,293.2,2333.0,2626.1,0.9551,6.7989,7.7540],
[75,0.03860,0.00103,4.1289,313.99,2475.2,314.0,2320.6,2634.6,1.0158,6.6654,7.6812],
[80,0.04741,0.00103,3.4052,334.96,2481.6,335.0,2308.0,2643.0,1.0756,6.5355,7.6111],
[85,0.05787,0.00103,2.8258,355.95,2487.8,356.0,2295.3,2651.3,1.1346,6.4088,7.5434],
[90,0.07018,0.00104,2.3591,376.97,2494.0,377.0,2282.5,2659.5,1.1929,6.2852,7.4781],
[95,0.08461,0.00104,1.9806,398.00,2500.0,398.1,2269.5,2667.6,1.2504,6.1647,7.4151],
[100,0.10142,0.00104,1.6718,419.06,2506.0,419.2,2256.4,2675.6,1.3072,6.0469,7.3541],
[110,0.14338,0.00105,1.2093,461.26,2517.7,461.4,2229.7,2691.1,1.4188,5.8193,7.2381],
[120,0.19867,0.00106,0.8912,503.60,2528.9,503.8,2202.1,2705.9,1.5279,5.6012,7.1291],
[130,0.27028,0.00107,0.66800,546.09,2539.5,546.4,2173.7,2720.1,1.6346,5.3918,7.0264],
[140,0.36154,0.00108,0.50845,588.77,2549.6,589.2,2144.2,2733.4,1.7392,5.1901,6.9293],
[150,0.47616,0.00109,0.39245,631.66,2559.1,632.2,2113.7,2745.9,1.8418,4.9953,6.8371],
[160,0.6182,0.00110,0.30678,674.79,2567.8,675.5,2081.9,2757.4,1.9426,4.8065,6.7491],
[170,0.7922,0.00111,0.24259,718.20,2575.7,719.1,2048.8,2767.9,2.0417,4.6233,6.6650],
[180,1.0028,0.00113,0.19384,761.92,2582.8,763.1,2014.1,2777.2,2.1392,4.4448,6.5840],
[190,1.2552,0.00114,0.15636,806.00,2589.0,807.4,1977.9,2785.3,2.2355,4.2704,6.5059],
[200,1.5549,0.00116,0.12721,850.47,2594.2,852.3,1939.7,2792.0,2.3305,4.0997,6.4302],
[210,1.9077,0.00117,0.10429,895.39,2598.3,897.6,1899.7,2797.3,2.4245,3.9318,6.3563],
[220,2.3196,0.00119,0.08609,940.82,2601.2,943.6,1857.3,2800.9,2.5177,3.7663,6.2840],
[230,2.7971,0.00121,0.07150,986.81,2602.9,990.2,1812.7,2802.9,2.6101,3.6027,6.2128],
[240,3.3469,0.00123,0.05971,1033.4,2603.1,1037.6,1765.4,2803.0,2.7020,3.4403,6.1423],
[250,3.9762,0.00125,0.05008,1080.8,2601.8,1085.8,1715.1,2800.9,2.7935,3.2786,6.0721],
[260,4.6923,0.00128,0.04217,1129.0,2598.7,1135.0,1661.6,2796.6,2.8849,3.1167,6.0016],
[270,5.5030,0.00130,0.03562,1178.1,2593.7,1185.3,1604.4,2789.7,2.9765,2.9539,5.9304],
[280,6.4166,0.00133,0.03015,1228.3,2586.4,1236.9,1543.0,2779.9,3.0685,2.7894,5.8579],
[290,7.4418,0.00137,0.02556,1279.9,2576.5,1290.0,1476.7,2766.7,3.1612,2.6222,5.7834],
[300,8.5879,0.00140,0.02166,1332.9,2563.6,1345.0,1404.6,2749.6,3.2552,2.4507,5.7059],
[310,9.8651,0.00145,0.01834,1387.9,2547.1,1402.2,1325.7,2727.9,3.3510,2.2734,5.6244],
[320,11.284,0.00150,0.01547,1445.3,2526.0,1462.2,1238.4,2700.6,3.4494,2.0878,5.5372],
[330,12.858,0.00156,0.01298,1505.8,2499.2,1525.9,1140.1,2666.0,3.5518,1.8904,5.4422],
[340,14.601,0.00164,0.01078,1570.6,2464.4,1594.5,1027.3,2621.8,3.6601,1.6755,5.3356],
[350,16.529,0.00174,0.00880,1642.1,2418.1,1670.9,892.7,2563.6,3.7784,1.4326,5.211],
[360,18.666,0.00190,0.00695,1726.3,2351.8,1761.7,719.8,2481.5,3.9167,1.1369,5.0536],
[370,21.044,0.00222,0.00495,1844.1,2230.3,1890.7,443.8,2334.5,4.1112,0.69,4.8012],
[373.95,22.064,0.00311,0.00311,2015.7,2015.7,2084.3,0,2084.3,4.4070,0,4.4070],
    ];

    for (var entry_i in _steam_sat) {
        let e = _steam_sat[entry_i];
        steamTable.table.push({
            t: e[0] + 273, //K
            p: e[1] * 1000000, // Pa
            vf: e[2],
            vg: e[3],
            hf: 1000 * e[6], // J/kg
            hg: 1000 * e[8], // J/kg
            sf: 1000 * e[9], // J/kg
            sg: 1000 * e[11], // J/kg
        });
    }
}

FixSaturatedSteamTables();